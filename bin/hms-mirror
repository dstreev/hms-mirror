#!/usr/bin/env sh
#
# Copyright (c) 2022. Cloudera, Inc. All Rights Reserved
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#

# Resolve Symlinks of exe
if [[ "$OSTYPE" == "darwin"* ]]; then
  # Mac OSX
  RESOLVED_EXE_PATH=`readlink $0`
else
  # ...
  RESOLVED_EXE_PATH=`readlink -f $0`
fi

# Find Dir of resolved script
APP_DIR=$(dirname $RESOLVED_EXE_PATH)
CURR_DIR=$(pwd)

echo "APP_DIR: $APP_DIR"

DO_NOT_FILE="${APP_DIR}/DO_NOT_RUN_APP_FROM_HERE.txt"
if [ -f $DO_NOT_FILE ]; then
  echo "Do NOT run application from 'install' directory.  If properly installed, the application will be in your PATH";
  exit 1
fi

if [[ "${APP_DIR}" == "${HOME}/.hms-mirror/bin" ]]; then
  echo "Running from User Local Instance"
else
  echo "Running Host instance"
fi

if [[ ! -d ${HOME}/.hms-mirror/aux_libs ]]; then
  mkdir -p ${HOME}/.hms-mirror/aux_libs
fi

if [ ! -z ${JAVA_HOME} ]; then
  JAVA="${JAVA_HOME}/bin/java"
else
  JAVA=java
fi

PRG_ARGS=
CMD_CP=

AUX_LIBS_DIR=${HMS_MIRROR_AUX_LIBS:-${HOME}/.hms-mirror/aux_libs}

SHOW_CP=
CMD_DIRECTIVE=
CMD_ARGS=
VERBOSE=

# Setting this to true ALWAYS.  No longer including all the hadoop lib in a shaded jar.
HADOOP_CLASSPATH="true"

APP_JAVA_OPTS="${JAVA_OPTS} -Xms2048m -Xmx4096m -XX:+UseG1GC"
logGING_THRESHOLD=${logGING_THRESHOLD:-"DEBUG"}
APP_log_FILE=${APP_log_FILE:-"hms-mirror.log"}

APP_OUTPUT_DIR=${HOME}/.hms-mirror/reports
DIR_OVERRIDE=

if [[ ! -d ${AUX_LIBS_DIR} ]]; then
  mkdir -p ${AUX_LIBS_DIR}
fi

while [[ $# -gt 0 ]]; do
  case "$1" in
  -D*)
    APP_JAVA_OPTS="${APP_JAVA_OPTS} ${1}"
    shift
    ;;
  -CP)
    shift
    CMD_CP=${CMD_CP}:$1
    shift
    ;;
  --hadoop-classpath)
    shift
    HADOOP_CLASSPATH="true"
    ;;
  --aux-libs)
    shift
    export AUX_LIBS_DIR=$1
    shift
    ;;
  --show-cp)
    shift
    SHOW_CP="true"
    ;;
  -o|--output-dir)
    shift
    PRG_ARGS="${PRG_ARGS} -o \"$1\""
    APP_OUTPUT_DIR=$1
    DIR_OVERRIDE="x"
    shift
    ;;
  *)
    PRG_ARGS="${PRG_ARGS} \"$1\""
    shift
    ;;
  esac
done

if [[ "${DIR_OVERRIDE}x" == "x" ]]; then
  # Add Date to output dir path
  APP_OUTPUT_PATH=${APP_OUTPUT_DIR}/$(date +%y-%m-%d_%H-%M-%S)
else
  APP_OUTPUT_PATH=${APP_OUTPUT_DIR}
fi

export APP_OUTPUT_PATH
APP_JAVA_OPTS="${APP_JAVA_OPTS} -Dapp.path.dir=\"$APP_OUTPUT_PATH\" -Dlogging.threshold=${logGING_THRESHOLD} -Dapp.log.file=\"$APP_log_FILE\""

if [[ ! -d ${AUX_LIBS_DIR} ]]; then
  mkdir -p ${AUX_LIBS_DIR}
fi

# Build Classpath of files in the lib directory
CMD_CP=${CMD_CP}:${APP_DIR}/../lib/*

# Add Hadoop Libs to classpath only if hadoop-common isn't already in the classpath.
for jarfile in $(ls ${APP_DIR}/../lib/); do
    if [[ "${jarfile}" == "hadoop-common"* ]]; then
      echo "Found 'hadoop-common' in lib directory.  Not adding Hadoop Classpath."
      HADOOP_CLASSPATH="false"
    fi
done

if [[ "${HADOOP_CLASSPATH}x" == "truex" ]]; then
    echo "Picking up local Hadoop Classpath Libs."
    CMD_CP=${CMD_CP}:$(hadoop classpath)
fi

# Add aux_libs to classpath
CMD_CP=${CMD_CP}:${AUX_LIBS_DIR}/*


CLI_CMD=""

if [[ "${SHOW_CP}x" != "x" ]]; then
  echo "Classpath: ${CMD_CP}"
fi

if [[ "${APP_JAVA_OPTS}x" != "x" ]]; then
  echo "Application JAVA_OPTS=${APP_JAVA_OPTS}" 1>&2
fi

if [[ "${PRG_ARGS}x" != "x" ]]; then
  echo "PRG_ARGS=${PRG_ARGS}" 1>&2
fi

echo "Using Java Version: "
$(${JAVA} -version)
echo ""

CLI_CMD="${JAVA} -cp ${CMD_CP} ${APP_JAVA_OPTS} com.cloudera.utils.hadoop.hms.Mirror ${PRG_ARGS}"

eval "${CLI_CMD}"
